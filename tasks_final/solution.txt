1. Методами машинного обучения (не статистическими тестами) показать, что разбиение на трейн и тест репрезентативно.
------------

1) Обучить классификатор - в качестве классов будут выступать принадлежность к трейну и принадлежность к тесту. Если классификатор сможет с хорошей точностью различать примеры из трейна и теста, это может указывать на то, что распределение признаков в них различается, то есть разбиение не репрезентативно. Если же классификатор не сможет достичь точности выше случайного угадывания, это может свидетельствовать о том, что разбиение репрезентативно.

2) Использовать методы уменьшения размерности, такие как PCA, чтобы визуализировать распределение трейна и теста в сокращенном пространстве признаков. Если данные из трейна и теста равномерно перемешаны и не образуют явно различимых кластеров, это также может быть индикатором репрезентативности разбиения.

3) Применить алгоритм кластеризации, чтобы разделить данные на кластеры. После этого проверить, насколько одинаково представлены кластеры в трейне и тесте. Если разбиение репрезентативно, кластеры должны быть примерно одинаковыми.

4) Обучить предиктивную модель на трейне под какую-то задачу (классификации или регрессии в зависимости от данных), получить предсказания этой модели на трейне и на тесте, и сравнить ошибки предсказания и вероятности появления классов или среднее для регрессии - если полученные данные выглядят схожими для трейна и теста, значит, распределение репрезентативно.

-----------------------------------------------------------------------------

2. Есть кластеризованный датасет на 4 кластера (1, 2, 3, 4). Бизнес аналитики посчитали, что самым прибыльным является кластер 2. Каждый клиент представлен в виде 10-тимертного вектора, где первые 6 значений транзакции, а оставшиеся: возраст, пол, социальный статус (женат (замужем)/неженат (не замужем)), количество детей. Нужно поставить задачу оптимизации для каждого клиента не из кластера 2 так, чтобы увидеть как должен начать вести себя клиент, чтобы перейти в кластер 2.
------------

Изменяемая величина здесь, строго говоря, только транзакции (на которую мы хоть как-то можем влиять). Для расширения скоупа оптимизационной задачи можно добавить следующие параметры: возраст, социальный статус, количество детей. Влиять на эти признаки мы не можем, но можем реагировать на их изменение.

Для начала мы должны определить характеристики, которые делают кластер 2 самым прибыльным. Это может быть сделано путем анализа центроида кластера 2 и сравнения его с центроидами других кластеров для выявления ключевых отличий.

Далее действуем так:

1) Определяем целевые значения показателей в кластере 2 - либо близкие к центроиду, либо средние значения.
2) Для каждого клиента из кластеров 1, 3, 4 определяем функцию отклонения от целевых значений (например, сумма взвешенных квадратов разностей между текущими и целевыми значениями).
3) Задача оптимизации состоит в том, чтобы минимизировать эту функцию отклонения с учетом ограничений (неизменяемые признаки, возможные ограничения по изменяемым признакам для каждого клиента).

Возможные ограничения по изменяемым признакам:
- Рекомендовать клиентам увеличивать кол-во детей или менять социальный статус - неэтично, и скорее всего, незаконно.
- Ждать увеличения возраста клиентов может быть неприбыльно с точки зрения бизнеса.
- Побуждение к увеличению транзакций клиентов может упираться в ограничения их дохода, а также подорвать лояльность клиентов. Однако, как оговаривалось в начале ответа, мы можем немного влиять на этот параметр, например, применением мотивирующих к совершению покупки механик.

-----------------------------------------------------------------------------

3. Что лучше 2 модели случайного леса по 500 деревьев или одна на 1000, при условии, что ВСЕ параметры кроме количества деревьев одинаковы?
------------

Аргументы за 2 модели по 500 деревьев:
- Если одна модель упала в проде или работает плохо из-за каких-то непредвиденных проблем с данными, вторая модель потенциально может подстраховать первую.

Аргументы за 1 модель с 1000 деревьев:
- При большем количестве деревьев центральная предельная теорема предполагает, что агрегированные прогнозы (посредством голосования большинства за классификацию или усреднения для регрессии) будут иметь тенденцию сходиться к более стабильной и точной оценке с меньшей дисперсией.
- Одну модель в проде проще развертывать, управлять ею и мониторить по сравнению с двумя отдельными моделями.
- Случайные леса менее склонны к переобучению при увеличении количества деревьев.

Стоит отметить, что две модели с 500 деревьями с одинаковым random_state будут иметь в каждом соответствующем дереве идентичный набор признаков, а следовательно, одинаковый набор предсказаний.
Следовательно, кроме как для увеличения надежности системы засчет дублирования модели использовать два случайных леса с 500 деревьями смысла нет.

-----------------------------------------------------------------------------

4. В наличии датасет с данными по дефолту клиентов. Как, имея в инструментарии только алгоритм kmeans получить вероятность дефолта нового клиента.
------------

Реализация:

1) Подготовить датасет, предварительно выбрав, какие фичи могут указывать на риск дефолта (+ уменьшить размерность данных). Нормализовать данные, если необходимо, поскольку k-means чувствителен к масштабу данных.
2) Применить k-means к датасету для создания некоторого оптимального количества кластеров. Стоит помнить о том, что определение оптимального числа кластеров является сложной задачей и может сильно влиять на результаты.
3) После кластеризации присвоить каждому кластеру значение его доли дефолтов. Например, если у нас есть кластер из 1000 клиентов и 200 из них дефолтировали, то доля дефолтов для этого кластера составляет 20%.
4) Когда появляется новый клиент, применить k-means для определения его кластера. Присвоить новому клиенту в качестве вероятности дефолта долю дефолтов в кластере.

-----------------------------------------------------------------------------

5. Есть выборка клиентов с заявкой на кредитный продукт. Датасет состоит из персональных данных: возраст, пол и т.д. Необходимо предсказывать доход клиента, который представляет собой непрерывные данные, но сделать это нужно используя только модель классификации.
------------

Используем мультиклассовую модель классификации, предсказывающую вероятность попадания в тот или иной класс (например, логистическая регрессия с one-vs-rest или нейронная сеть с softmax на выходе).

1) Делим доход клиентов на диапазоны (например, квантили) - получаем суррогатные классы для предсказания модели. Назначаем классам соответствующие метки.
2) Определяем репрезентативное значение для каждого класса. Например, медиана каждого интервала.
3) Обучаем классификатор предсказывать наши суррогатные классы с некоторой вероятностью.
4) Для каждого предсказания вычисляем взвешенное среднее - умножаем вероятности принадлежности к классу на медиану каждого класса и суммируем. Получаем относительно непрерывную величину.

Например, допустим, у нас есть 4 класса, которые представляют диапазоны доходов, и модель предсказала следующие вероятности принадлежности к классам для одного клиента: [0.1, 0.3, 0.4, 0.2]. Предположим, медианные значения доходов для этих классов равны: [25000, 50000, 75000, 100000] соответственно.

Тогда ожидаемый доход будет вычислен так:

Е = 0.1 * 25000 + 0.3 * 50000 + 0.4 * 75000 + 0.2 * 100000 = 67500.